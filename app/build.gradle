buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        //classpath 'io.fabric.tools:gradle:1.+'
        classpath 'io.fabric.tools:gradle:1.25.1'
    }
}

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: 'io.fabric'
apply plugin: 'checkstyle'

checkstyle {
    toolVersion = '7.1.1'
}

task checkstyle(type: Checkstyle) {
    // Cleaning the old log because of the creation of the new ones (not sure if totaly needed)
    delete fileTree(dir: "${project.rootDir}/app/build/reports/checkstyle")
    configFile file("${project.rootDir}/checkstyle.xml")
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = true
        xml {
            destination "${project.rootDir}/app/build/reports/checkstyle/checkstyle-result.xml"
        }
    }

    classpath = files()
}

task listFlavors {
    android.productFlavors.all {
        flavor ->
            println(flavor.name)
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 27
    flavorDimensions "default"
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 27
        // Enabling multidex support.
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    def FABRIC_VIDEONA_ORG_APIKEY = "eba78720f87307ca48dfa4200dd90914ff6653f2"
    def FABRIC_VIDEONA_ORG_APISECRET = "1636d8a8a8c633c8ba87f5a67ca26a5cc354c414b108ef565df202f07f393ae9"
    productFlavors {
        vimojo {
            applicationId "com.videonasocialmedia.vimojo.main"
            versionCode 104 // 20180319
            versionName "0.14.6" // 20180319
            resValue "string", "app_out_of_date", "2018-06-30" // 20170731
            resValue "string", "app_name", "Vimojo"
            resValue "string", "api_base_url", "https://"
            resValue "string", "content_authority", applicationId + '.provider'
            resValue "string", "account_type", applicationId + ".auth"
            buildConfigField "String", "API_BASE_URL", "\"http://beta.viday.co/api/v1/\""
            buildConfigField "boolean", "FEATURE_OUT_OF_DATE", "false"
            buildConfigField "boolean", "FEATURE_FTP", "true"
            buildConfigField "boolean", "FEATURE_VOICE_OVER", "true"
            buildConfigField "boolean", "FEATURE_WATERMARK_SWITCH", "true"
            buildConfigField "boolean", "FEATURE_FORCE_WATERMARK", "false"
            buildConfigField "boolean", "FEATURE_AVTRANSTITION", "false"
            buildConfigField "boolean", "VIMOJO_STORE_AVAILABLE", "true"
            buildConfigField "boolean", "FEATURE_RECORD_AUDIO_GAIN", "false"
            buildConfigField "boolean", "FEATURE_VIMOJO_PLATFORM", "false"
            ext.fabricApiKey = "1f6610673faf2f5fcde5824176e94c8f4570aa2c"
            ext.fabricApiSecret = "c529f00d2df71a2bc5215e4a75166cec6733c4781ea9e8df57d0c752e909701d"
            manifestPlaceholders = [vimojoAppName: "Vimojo", fabricApiKey: "1f6610673faf2f5fcde5824176e94c8f4570aa2c"]
        }
        /*hispanopost {
            applicationId "com.videonasocialmedia.vimojo.hispanopost"
            versionCode 60 // 20171130
            versionName "0.7.6.1.fHispanopost" // 20171130
            resValue "string", "app_out_of_date", "2018-06-30"
            resValue "string", "app_name", "HispanoPost"
            resValue "string", "api_base_url", "https://"
            resValue "string", "content_authority", applicationId + '.provider'
            resValue "string", "account_type", applicationId + ".auth"
            buildConfigField "boolean", "FEATURE_OUT_OF_DATE", "true"
            buildConfigField "boolean", "FEATURE_FTP", "true"
            buildConfigField "boolean", "FEATURE_VOICE_OVER", "true"
            buildConfigField "boolean", "FEATURE_WATERMARK_SWITCH", "true"
            buildConfigField "boolean", "FEATURE_FORCE_WATERMARK", "false"
            buildConfigField "boolean", "FEATURE_AVTRANSTITION", "false"
            buildConfigField "boolean", "VIMOJO_STORE_AVAILABLE", "false"
            buildConfigField "boolean", "FEATURE_RECORD_AUDIO_GAIN", "false"
            buildConfigField "boolean", "FEATURE_VIMOJO_PLATFORM", "false"
            ext.fabricApiKey = "3fc92dd8023e505ebab31a962e1eb284f37696bb"
            ext.fabricApiSecret = "f88950e831f1f8c6d7402b96e4e93c1c2f71f1e021dc68b183b8b3d2456b9b67"
            manifestPlaceholders = [vimojoAppName: "HispanoPost", fabricApiKey: "3fc92dd8023e505ebab31a962e1eb284f37696bb"]
        }*/
       /* rtve {
            applicationId "com.videonasocialmedia.vimojo.rtve"
            versionCode 69 // 20180131
            versionName "0.8.2.fRtve" // 20180131
            resValue "string", "app_out_of_date", "2018-06-30" // 20170731
            resValue "string", "app_name", "Vimojo Rtve"
            resValue "string", "api_base_url", "https://"
            resValue "string", "content_authority", applicationId + '.provider'
            resValue "string", "account_type", applicationId + ".auth"
            buildConfigField "boolean", "FEATURE_OUT_OF_DATE", "true"
            buildConfigField "boolean", "FEATURE_FTP", "true"
            buildConfigField "boolean", "FEATURE_VOICE_OVER", "true"
            buildConfigField "boolean", "FEATURE_WATERMARK_SWITCH", "false"
            buildConfigField "boolean", "FEATURE_FORCE_WATERMARK", "false"
            buildConfigField "boolean", "FEATURE_AVTRANSTITION", "false"
            buildConfigField "boolean", "VIMOJO_STORE_AVAILABLE", "false"
            buildConfigField "boolean", "FEATURE_RECORD_AUDIO_GAIN", "false"
            buildConfigField "boolean", "FEATURE_VIMOJO_PLATFORM", "false"
            ext.fabricApiKey = "9600ab9fda1b0c0991396ffc882a957bbcca8678"
            ext.fabricApiSecret = "b3bf19cf86f8075700885f47ec7cf2813b8d8b6832a78a008ed9b757e5a56d91"
            manifestPlaceholders = [vimojoAppName: "Vimojo Rtve", fabricApiKey: "9600ab9fda1b0c0991396ffc882a957bbcca8678"]
        }*/
       /* vimojowatermark {
            applicationId "com.videonasocialmedia.vimojo.vimojowatermark"
            versionCode 33 // 20171130
            versionName "0.7.6.1.fVimojoWatermark" // 20171130
            resValue "string", "app_out_of_date", "2018-06-30" //20170731
            resValue "string", "app_name", "Vimojo Videona"
            resValue "string", "api_base_url", "https://"
            resValue "string", "content_authority", applicationId + '.provider'
            resValue "string", "account_type", applicationId + ".auth"
            buildConfigField "boolean", "FEATURE_OUT_OF_DATE", "true"
            buildConfigField "boolean", "FEATURE_FTP", "true"
            buildConfigField "boolean", "FEATURE_VOICE_OVER", "true"
            buildConfigField "boolean", "FEATURE_WATERMARK_SWITCH", "true"
            buildConfigField "boolean", "FEATURE_FORCE_WATERMARK", "false"
            buildConfigField "boolean", "FEATURE_AVTRANSTITION", "false"
            buildConfigField "boolean", "VIMOJO_STORE_AVAILABLE", "false"
            buildConfigField "boolean", "FEATURE_RECORD_AUDIO_GAIN", "false"
            buildConfigField "boolean", "FEATURE_VIMOJO_PLATFORM", "false"
            ext.fabricApiKey = "ef7283ce8f2da3b2c5dc022a1d7952f349f659c5"
            ext.fabricApiSecret = "fdb53a8ca1d8e71f363963c0624f7606af4ed317c57340afc4a72303eef221b0"
            manifestPlaceholders = [vimojoAppName: "Vimojo Videona", fabricApiKey: "ef7283ce8f2da3b2c5dc022a1d7952f349f659c5"]
        }*/
        thomsonfoundation {
            applicationId "com.videonasocialmedia.vimojo.thomsonfoundation"
            versionCode 55 // 20180319
            versionName "0.14.6.fThomsonFoundation" // 20180319
            resValue "string", "app_out_of_date", "2018-06-30"
            resValue "string", "app_name", "Vimojo Thomson Foundation"
            resValue "string", "api_base_url", "https://"
            resValue "string", "content_authority", applicationId + '.provider'
            resValue "string", "account_type", applicationId + ".auth"
            buildConfigField "String", "API_BASE_URL", "\"http://beta.viday.co/api/v1/\""
            buildConfigField "boolean", "FEATURE_OUT_OF_DATE", "true"
            buildConfigField "boolean", "FEATURE_FTP", "true"
            buildConfigField "boolean", "FEATURE_VOICE_OVER", "true"
            buildConfigField "boolean", "FEATURE_WATERMARK_SWITCH", "true"
            buildConfigField "boolean", "FEATURE_FORCE_WATERMARK", "false"
            buildConfigField "boolean", "FEATURE_AVTRANSTITION", "false"
            buildConfigField "boolean", "VIMOJO_STORE_AVAILABLE", "false"
            buildConfigField "boolean", "FEATURE_RECORD_AUDIO_GAIN", "false"
            buildConfigField "boolean", "FEATURE_VIMOJO_PLATFORM", "false"
            ext.fabricApiKey = "c5e050918c143441f6b23e7936f7f83faa1330b4"
            ext.fabricApiSecret = "2c2a5661adbf7258c3dfb8711f48b40ed43d5291f9474ba8e4cda6d05b917b55"
            manifestPlaceholders = [vimojoAppName: "Vimojo Thomson Foundation", fabricApiKey: "c5e050918c143441f6b23e7936f7f83faa1330b4"]
        }

        /*nemsummit {
            applicationId "com.videonasocialmedia.vimojo.nemsummit"
            versionCode 4 // 20171130
            versionName "0.7.6.1.fNemSummit" // 20171130
            resValue "string", "app_out_of_date", "2018-06-30"
            resValue "string", "app_name", "Vimojo Nem Summit"
            resValue "string", "api_base_url", "https://nemsummit.viday.co/"
            resValue "string", "content_authority", applicationId + '.provider'
            resValue "string", "account_type", applicationId + ".auth"
            buildConfigField "boolean", "FEATURE_OUT_OF_DATE", "true"
            buildConfigField "boolean", "FEATURE_FTP", "false"
            buildConfigField "boolean", "FEATURE_VOICE_OVER", "true"
            buildConfigField "boolean", "FEATURE_WATERMARK_SWITCH", "false"
            buildConfigField "boolean", "FEATURE_FORCE_WATERMARK", "true"
            buildConfigField "boolean", "FEATURE_AVTRANSTITION", "false"
            buildConfigField "boolean", "VIMOJO_STORE_AVAILABLE", "false"
            buildConfigField "boolean", "FEATURE_RECORD_AUDIO_GAIN", "false"
            buildConfigField "boolean", "FEATURE_VIMOJO_PLATFORM", "true"
            ext.fabricApiKey = "cc4515beda76fe1e841888650366e5a069c590a1"
            ext.fabricApiSecret = "4381a2ca62cb21c2118e3319917e7ccc53fd659bd726bdd1175f540e14e7186d"
            manifestPlaceholders = [vimojoAppName: "Vimojo Nem Summit", fabricApiKey: "cc4515beda76fe1e841888650366e5a069c590a1"]
        }*/
        m4n {
            applicationId "com.videonasocialmedia.vimojo.m4n"
            versionCode 22 // 20180319
            versionName "0.14.6.fMarketForNews" // 20180319
            resValue "string", "app_out_of_date", "2018-06-30" // 20180109
            resValue "string", "app_name", "Vimojo Market4News"
            resValue "string", "api_base_url", "https://"
            resValue "string", "content_authority", applicationId + '.provider'
            resValue "string", "account_type", applicationId + ".auth"
            buildConfigField "String", "API_BASE_URL", "\"http://beta.market4news.com/api/v1/\""
            buildConfigField "boolean", "FEATURE_OUT_OF_DATE", "false"
            buildConfigField "boolean", "FEATURE_FTP", "false"
            buildConfigField "boolean", "FEATURE_VOICE_OVER", "true"
            buildConfigField "boolean", "FEATURE_WATERMARK_SWITCH", "true"
            buildConfigField "boolean", "FEATURE_FORCE_WATERMARK", "false"
            buildConfigField "boolean", "FEATURE_AVTRANSTITION", "false"
            buildConfigField "boolean", "VIMOJO_STORE_AVAILABLE", "false"
            buildConfigField "boolean", "FEATURE_RECORD_AUDIO_GAIN", "false"
            buildConfigField "boolean", "FEATURE_VIMOJO_PLATFORM", "true"
            ext.fabricApiKey = "7bf627d1b2578e3f8e4136d9dba10530e0e7d578"
            ext.fabricApiSecret = "40b9ea4d7a095ba1c106dbdebd1cf69c9761460d54f2c8418b206c167f677ea4"
            manifestPlaceholders = [vimojoAppName: "Vimojo Market4News", fabricApiKey: "7bf627d1b2578e3f8e4136d9dba10530e0e7d578"]
        }

        nbc {
            applicationId "com.videonasocialmedia.vimojo.nbc"
            versionCode 5 // 20180319
            versionName "0.14.6.fComcastNbc" // 20180319
            resValue "string", "app_out_of_date", "2018-06-30" // 20180109
            resValue "string", "app_name", "Vimojo NBC"
            resValue "string", "api_base_url", "https://"
            resValue "string", "content_authority", applicationId + '.provider'
            resValue "string", "account_type", applicationId + ".auth"
            buildConfigField "String", "API_BASE_URL", "\"http://beta.viday.co/api/v1/\""
            buildConfigField "boolean", "FEATURE_OUT_OF_DATE", "false"
            buildConfigField "boolean", "FEATURE_FTP", "true"
            buildConfigField "boolean", "FEATURE_VOICE_OVER", "true"
            buildConfigField "boolean", "FEATURE_WATERMARK_SWITCH", "true"
            buildConfigField "boolean", "FEATURE_FORCE_WATERMARK", "false"
            buildConfigField "boolean", "FEATURE_AVTRANSTITION", "false"
            buildConfigField "boolean", "VIMOJO_STORE_AVAILABLE", "false"
            buildConfigField "boolean", "FEATURE_RECORD_AUDIO_GAIN", "false"
            buildConfigField "boolean", "FEATURE_VIMOJO_PLATFORM", "false"
            ext.fabricApiKey = "60975c88785d14ed56393acb658081f33b93678f"
            ext.fabricApiSecret = "393c86bf03f37c4cf603df78c122f715fbd4aa4d3da89e0b3dc95333728e6308"
            manifestPlaceholders = [vimojoAppName: "Vimojo NBC", fabricApiKey: "60975c88785d14ed56393acb658081f33b93678f"]
        }
    }
    File fabricProperties = new File("${project.projectDir.absolutePath}/fabric.properties")
    applicationVariants.all { variant ->
        variant.productFlavors.each { flavor ->
            def variantSuffix = variant.name.capitalize()
            def generatePropertiesTask = task("fabricGenerateProperties${variantSuffix}") << {
                Properties properties = new Properties()
                if (variantSuffix.endsWith("Debug")) {
                    properties.put("apiKey", FABRIC_VIDEONA_ORG_APIKEY)
                    properties.put("apiSecret", FABRIC_VIDEONA_ORG_APISECRET)
                } else {
                    properties.put("apiKey", flavor.fabricApiKey)
                    properties.put("apiSecret", flavor.fabricApiSecret)
                }
                properties.store(new FileWriter(fabricProperties), "")
                println "Generating fabric.properties for api key: ${flavor.fabricApiKey}"
            }

            def generateResourcesTask = project.tasks.getByName("fabricGenerateResources${variantSuffix}")
            generateResourcesTask.dependsOn generatePropertiesTask
//            generateResourcesTask.doLast {
//                println "Removing fabric.properties"
//                fabricProperties.delete()
//            }
            def crashlyticsUploadDistributionTask = project.tasks.getByName("crashlyticsUploadDistribution${variantSuffix}")
            crashlyticsUploadDistributionTask.dependsOn generatePropertiesTask
        }
    }
    buildTypes {
        release {
            buildConfigField "String", "MIXPANEL_TOKEN", "\"6f46145c03bf5cf5104bb3536059d994\""
            minifyEnabled true
            manifestPlaceholders = [appNameSuffix:""]
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            applicationIdSuffix ".debug"
            versionNameSuffix '-DEBUG'
            ext.betaDistributionGroupAliases = "videona-dev-team"
            ext.betaDistributionReleaseNotesFilePath = "${project.rootDir}/RELEASE"
            buildConfigField "String", "MIXPANEL_TOKEN", "\"c6617213110cd2513dfc0ad97dbaee66\""
            ext.fabricApiKey = FABRIC_VIDEONA_ORG_APIKEY
            ext.fabricApiSecret = FABRIC_VIDEONA_ORG_APISECRET
            manifestPlaceholders = [appNameSuffix:".Debug", fabricApiKey: FABRIC_VIDEONA_ORG_APIKEY]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'LICENSE.txt'
    }
    dexOptions {
        javaMaxHeapSize "2048M"
    }
    lintOptions {
        disable 'MissingTranslation'
        abortOnError false
    }
    testOptions {
        unitTests.all {
            jvmArgs '-noverify' // workarround to fix VerifyError caused by proguard sdk minify
            systemProperty 'robolectric.offline', 'true'
            systemProperty 'robolectric.dependency.dir', "$System.env.ROBOLECTRIC_LIB_PATH"
        }
        unitTests {
            includeAndroidResources = true
        }
    }
    buildToolsVersion '27.0.3'
}

dependencies {
    // Dagger setup
    annotationProcessor 'com.google.dagger:dagger-compiler:2.7'
    // needed for source code generation
    testAnnotationProcessor 'com.google.dagger:dagger-compiler:2.7'
    implementation 'com.google.dagger:dagger:2.7'
    // dagger itself
    androidTestImplementation 'com.google.dagger:dagger:2.7'
    // dagger itself
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'
    // needed to resolve compilation errors
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    androidTestImplementation 'org.hamcrest:hamcrest-core:1.3'
    androidTestImplementation('junit:junit:4.12') {
        exclude group: "org.hamcrest"
    }
    androidTestImplementation('org.mockito:mockito-core:2.6.3') {
        exclude group: "org.hamcrest"
    }
    testImplementation 'org.robolectric:robolectric:3.1.2'
    testImplementation 'org.robolectric:shadows-multidex:3.3.2'
    testImplementation 'org.powermock:powermock-api-mockito2:1.7.1'
    testImplementation 'org.powermock:powermock-module-junit4-rule-agent:1.7.1'
    testImplementation 'org.powermock:powermock-module-junit4:1.7.1'
    testImplementation 'org.json:json:20140107'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //implementation project(':avrecorder')
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support:multidex:1.0.2'
    implementation 'com.android.support:recyclerview-v7:27.0.2'
    implementation 'com.android.support:cardview-v7:27.0.2'
    implementation 'com.android.support:percent:27.0.2'
    implementation 'com.android.support:support-v13:27.0.2'
    implementation 'com.android.support:design:27.0.2'
    implementation 'com.github.bumptech.glide:glide:3.8.0'
    implementation 'jp.wasabeef:glide-transformations:2.0.2'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'de.greenrobot:eventbus:2.4.0'
    implementation 'com.mixpanel.android:mixpanel-android:5.+'
    implementation 'com.google.android.gms:play-services-identity:11.8.0'
    implementation 'com.google.android.gms:play-services-gcm:11.8.0'
    implementation 'com.google.android.gms:play-services-analytics:11.8.0'
    implementation 'com.google.firebase:firebase-core:11.8.0'
    implementation 'com.getbase:floatingactionbutton:1.10.1'
    implementation 'com.karumi:dexter:2.2.2'
    implementation 'commons-net:commons-net:3.5'
    implementation 'com.jcraft:jsch:0.1.53'
    // https://mvnrepository.com/artifact/com.jcraft/jzlib
    implementation 'com.jcraft:jzlib:1.1.1'
    implementation 'org.florescu.android.rangeseekbar:rangeseekbar-library:0.3.0'
    implementation 'com.google.android.exoplayer:exoplayer:r1.5.10'
    implementation 'com.googlecode.mp4parser:isoparser:1.1.7'
    implementation 'io.realm:android-adapters:1.3.0'
    implementation 'com.roughike:bottom-bar:2.0.2'
    implementation 'com.h6ah4i.android.widget.verticalseekbar:verticalseekbar:0.7.2'
    implementation 'com.victor:lib:1.0.4'
    implementation 'com.github.apl-devs:appintro:v4.2.2'
    implementation project(':sdk')
    implementation 'org.jcodec:jcodec:0.1.9'
    androidTestImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    androidTestImplementation 'org.hamcrest:hamcrest-core:1.3'
    androidTestImplementation('junit:junit:4.12') {
        exclude group: "org.hamcrest"
    }
    //    androidTestCompile('org.mockito:mockito-core:1.10.19') {
    //        exclude group: "org.hamcrest"
    //    }
    //    androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
    //    androidTestCompile 'com.linkedin.dexmaker:dexmaker-mockito:2.2.0'
    testImplementation('org.mockito:mockito-core:2.6.3') {
        exclude group: "org.hamcrest"
    }
    testImplementation 'org.mockito:mockito-android:2.6.3'
    implementation('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true;
    }
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'io.reactivex:rxjava:1.1.0'
    androidTestImplementation 'com.android.support.test:runner:0.4.1'
    androidTestImplementation 'com.android.support.test:rules:0.4.1'
    androidTestImplementation 'com.android.support:support-annotations:25.3.1'
    implementation project(path: ':camera')
    implementation 'com.kailashdabhi:om-recorder:1.1.5'
    implementation 'com.android.billingclient:billing:1.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.0.2'
    implementation 'com.squareup.retrofit2:adapter-guava:2.0.2'
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    implementation 'com.google.guava:guava:19.0'
    implementation 'com.squareup.tape2:tape:2.0.0-SNAPSHOT'
    implementation 'com.squareup.moshi:moshi:1.5.0'
}

// Ensure the no-op dependency is always used in JVM tests.
configurations.all { config ->
    if (config.name.contains('UnitTest')) {
        config.resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.squareup.leakcanary' && details.requested.name == 'leakcanary-android') {
                details.useTarget(group: details.requested.group, name: 'leakcanary-android-no-op', version: details.requested.version)
            }
        }
    }
}

// ADD THIS AT THE BOTTOM
apply plugin: 'com.google.gms.google-services'